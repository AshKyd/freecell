(function(){if(typeof localStorage=="undefined"){localStorage={}}this.Scoreboard=function(a){a=_.extend({webStorageKey:"scoreboard",storageEngine:"webstorage",classes:["regular"],fields:{time:{type:"average"},moves:{type:"average"},scoreAverage:{type:"average"},scoreHighest:{type:"custom"},games:{type:"addition"},won:{type:"addition",streak:true},lost:{type:"addition",streak:true}}},a);this.options=a};this.Scoreboard.prototype={storageEngines:{webstorage:{get:function(a,b){b(localStorage[a])},set:function(a,b,c){localStorage[a]=b;c()}},chromesync:{get:function(a,b){chrome.storage.sync.get(a,function(c){if(typeof c[a]!="undefined"){b(c[a]);return}b(undefined)})},set:function(a,b,d){var c={};c[a]=b;chrome.storage.sync.set(c,d)}}},load:function(b){if(typeof b!="function"){throw"Callback not defined in Scoreboard.load();"}var a=this;this.storageEngines[this.options.storageEngine].get(a.options.webStorageKey,function(c){if(typeof c=="undefined"){a.initialise()}else{a.data=JSON.parse(c)}b(this)})},save:function(b){var a=this;b=typeof b=="function"?b:function(){};this.storageEngines[this.options.storageEngine].set(this.options.webStorageKey,JSON.stringify(this.data),function(c){b(a)})},initialise:function(){var d=this;var c={};for(var b=0;b<d.options.classes.length;b++){var a={};_.each(this.options.fields,function(f,e){a[e]=d.makeField(f)});c[this.options.classes[b]]=a}this.data=c;return},makeField:function(a){var b={};switch(a.type){case"addition":case"custom":b={val:0};break;case"average":b={val:null,count:0,min:null,max:null};break}if(a.streak){b.lastVal=0;b.streakLength=0;b.streakMax=0}return b},updateFields:function(b,a){var c=this;_.each(a,function(e,d){c.updateField(b,d,e)})},updateField:function(d,e,b){var a=this.options.fields[e];var c=this.data[d][e];switch(a.type){case"addition":c.val+=b;break;case"average":if(c.count==0){c.val=b}else{c.val=(c.val*c.count+b)/(c.count+1)}if(c.max===null||b>c.max){c.max=b}if(c.min===null||b<c.min){c.min=b}c.count++;break;case"custom":c.val=b;break}if(a.streak){if(c.lastVal===null||c.val>c.lastVal){c.streakLength++}else{c.streakLength=0}if(c.streakLength>c.streakMax){c.streakMax=c.streakLength}c.lastVal=c.val}},getFields:function(){return this.data},getField:function(a,b){return this.data[a][b].val},getWinningStreak:function(a,b){return this.data[a][b].streakLength},resetScores:function(){delete localStorage[this.options.webStorageKey];this.initialise()},resetStreak:function(a,b){this.data[a][b].streakLength=0;this.data[a][b].lastVal=null}}}).call(this);